### INSTALLATION NOTES ###
# 1. Install Homebrew (https://github.com/mxcl/homebrew)
# 2. brew install zsh
# 3. Install prezto (https://github.com/rajats105/prezto)
# 4. Install iTerm2
# 5. In iTerm2 preferences for your profile set:
#      Character Encoding: Unicode (UTF-8)
#      Report Terminal Type: xterm-256color
#
# Usage:
# - Prefix is set to Ctrl-b (make sure you remapped Caps Lock to Ctrl)
# - Shortcuts prefixed with Ctrl-b
#   - Last used window:   /
#   - Last used pane:     ;
#   - Swap window left:   <
#   - Swap window right:  <
#   - Vertical split:     v
#   - Horizontal split:   h
#   - Kill pane:          x
#   - Kill window:        X
#   - Choose session:     Ctrl-s
#   - Quick window:       Ctrl-q
# - Globals not prefixed with Ctrl-b
#   - Last used window:   M-/
#   - Zoom in/Zoom out:   M-\
#   - Go to upper pane:   C-<Up Arrow>
#   - Go to lower pane:   C-<Down Arrow>
#   - Go to left pane:    C-<Left Arrow>
#   - Go to right pane:   C-<Right Arrow>
#   - Previous window:    M-<Left Arrow>
#   - Next window:        M-<Right Arrow>
#   - Previous session:   M-<Up Arrow>
#   - Next session:       M-<Down Arrow>

### LOOK & FEEL ###
set -g default-terminal "xterm-256color"

# https://github.com/dandavison/delta#24-bit-color
set -g terminal-overrides ",xterm-256color:Tc"
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'

# default statusbar colors
set -g status-style fg=colour4,bg=colour19

# mode style
setw -g mode-style fg=colour19,bg=colour4

set -g renumber-windows on
# default window title colors
setw -g window-status-style fg=colour0,bg=colour4

# active window title colors
setw -g window-status-current-style fg=colour0,bg=colour1

# Taken from https://github.com/nicknisi/dotfiles/blob/master/tmux/tmux.conf.symlink

# Activity Monitoring
setw -g monitor-activity off
set -g visual-activity off

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize off

# make delay shorter
set -sg escape-time 0

# tile all windows
unbind =
bind = select-layout tiled

# pane border
set -g pane-border-style fg=colour19
set -g pane-active-border-style fg=colour4

# pane number display
set -g display-panes-active-colour colour1
set -g display-panes-colour colour4

# message colour
set -g message-style fg=colour4,bg=colour19
set -g message-command-style fg=colour4,bg=colour19

# clock
set -g clock-mode-colour colour2

# status bar
set -g status-interval 5
set -g status-position bottom
set -g status-justify left

# Using the mouse to switch panes
set -g mouse on

set -g history-limit 10000

set -g status-keys emacs
set -g mode-keys emacs

#no command delay
set -sg escape-time 0

# set first window to index 1 (not 0) to map more to the keyboard layout
set -g base-index 1
setw -g pane-base-index 1

### KEYS ###

# using C-Space as prefix

unbind C-b
set-option -g prefix C-Space
bind C-Space send-prefix

# new window and retain cwd
bind c new-window -c "#{pane_current_path}"

# Kill pane/window/session shortcuts
bind x confirm-before -p "kill pane? (y/n)" "kill-pane"
bind X confirm-before -p "kill window? (y/n)" "kill-window"

unbind f
TMUX_FZF_LAUNCH_KEY="f"
TMUX_FZF_ORDER="session|window|pane|command|keybinding"

#unbind /
# Go to last window
bind -n M-/ last-window

unbind %
bind h split-window -v -c "#{pane_current_path}"
unbind '"'
bind v split-window -h -c "#{pane_current_path}"

# synchronize all panes in a window
bind y setw synchronize-panes

# Pane zoomin/zoomout
bind -n M-\\ resize-pane -Z

# Switching windows with alt
bind -n S-Left previous-window
bind -n S-Right next-window

# Switch between session with alt
bind -n S-Up switch-client -p
bind -n S-Down switch-client -n
# Choose from available session
bind s choose-session

# Switching panes with shift
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Down select-pane -D
bind -n M-Up select-pane -U

# Resize panes with shift
bind -n C-Left resize-pane -L 2
bind -n C-Right resize-pane -R 2
bind -n C-Down resize-pane -D 1
bind -n C-Up resize-pane -U 1

unbind '{'
bind '{' swap-pane -D
unbind '}'
bind '}' swap-pane -U

unbind r
bind r source-file ~/.tmux.conf\; display "Reloaded"

# renumber windows (if you have gaps in numbering, this renumbers them sequentially
bind q movew -r

# move current window left and right in the tab list, respectively.
bind '<' swap-window -t -1
bind '>' swap-window -t +1

# bind Escape copy-mode
# bind p paste-buffer

bind-key [ copy-mode
bind-key ] paste-buffer

bind p previous-window
bind n next-window

# Set parent terminal title to reflect current window in tmux session
set -g set-titles on
set -g set-titles-string "#I:#W"

#set-option -g allow-passthrough on

bind -n C-y run "tmux save-buffer - | /mnt/c/Windows/System32/clip.exe" \; display-message "Clipboard copied"
# bind -n C-y run-shell "powershell.exe -command 'Get-Clipboard'"\; display-message "Clipboard copied"

bind-key -T copy-mode M-w send-keys -X copy-pipe-and-cancel "cat | clip.exe"

# Buffers to/from Mac clipboard, yay tmux book from pragprobind -n M-C run "tmux save-buffer - | clip.exe"
bind -n M-V run "tmux set-buffer $(powershell.exe -command 'Get-Clipboard'); tmux paste-buffer"

color_block="#{?client_prefix,#[fg=colour1],#[fg=colour2]}#[fg=bold]"
color_divider="#{?client_prefix,#[fg=colour1],#[fg=colour2]}#[fg=bold]"
color_text="#[fg=colour4,nobold]"

#if-shell 'test ! -n "$SSH_CLIENT"' \
   'source-file ~/.tmux.local.conf'

#if-shell 'test -n "$SSH_CLIENT"' \
  'source-file ~/.tmux.remote.conf'

# source-file ~/.tmux.local.conf

set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.tmux/plugins/'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'MaximilianGaedig/tmux-filter'
set -g @plugin 'Morantron/tmux-fingers'
set -g @plugin 'wfxr/tmux-power'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

set -g @continuum-restore 'on'

set -g @yank_selection 'primary' # or 'secondary' or 'clipboard'
set -g @yank_selection_mouse 'clipboard' # or 'primary' or 'secondary'

set -g @fingers-key b

set -g @tmux_power_theme 'moon'

set -g @tmux_power_theme 'colour2'
set -g @tmux_power_prefix_highlight_pos 'R'
set -g @tmux_power_date_icon ' '
set -g @tmux_power_time_icon ' '
set -g @tmux_power_user_icon ' '
set -g @tmux_power_session_icon ' '

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

